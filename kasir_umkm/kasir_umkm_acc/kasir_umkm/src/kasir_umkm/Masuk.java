package kasir_umkm;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.*;
import javax.swing.JOptionPane;
import popupmasuk.popupmasuk;
import popupmasuk.popupmasuk1;
import popupmasuk.popupmasuk2;
import popupmasuk.popupmasuk3;
import popupmasuk.popupmasuk4;
import popupmasuk.popupmasuk5;
import popupmasuk.popupmasuk6;

/**
 *
 * @author Saiful
 */
public class Masuk extends javax.swing.JFrame {

    private int loginAttempts = 0;
    private int attemptCount = 0;
    private Connection conn;
    static String currentPosisi;
    public static String currentUsername; // Untuk menyimpan username yang login

    private void connectDatabase() {
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_kasir_umkm1", "root", "");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Database connection error: " + e.getMessage());
        }
    }

    public Masuk() {
        initComponents();
        connectToDatabase();
    }

    private void connectToDatabase() {
        try {
            String url = "jdbc:mysql://localhost:3306/db_kasir_umkm1"; // Sesuaikan dengan URL database Anda
            String user = "root"; // Ganti dengan username database Anda
            String password = ""; // Ganti dengan password database Anda
            conn = DriverManager.getConnection(url, user, password);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal terhubung ke database: " + e.getMessage());
        }
    }

    private String getUsernameById(String idUser) {
        try {
            String query = "SELECT username FROM users WHERE id_user = ?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, idUser);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                return rs.getString("username"); // Mengembalikan username jika ditemukan
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
        return null; // Mengembalikan null jika tidak ditemukan
    }

    private String getUserId(String username, String password, String posisi) {
        try {
            String query = "SELECT id_user FROM users WHERE username = ? AND password = ? AND posisi = ?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, username);
            stmt.setString(2, password);
            stmt.setString(3, posisi);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                return rs.getString("id_user"); // Mengembalikan id_user jika ditemukan
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
        return null; // Mengembalikan null jika tidak ditemukan
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jusername = new javax.swing.JTextField();
        jmasuk = new javax.swing.JButton();
        jposisi = new javax.swing.JComboBox<>();
        jpassword = new javax.swing.JPasswordField();
        jlihatpassword = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/GAMBAR/seblak.png")).getImage());
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jusername.setBackground(new java.awt.Color(0, 51, 102));
        jusername.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jusername.setForeground(new java.awt.Color(255, 255, 255));
        jusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jusernameActionPerformed(evt);
            }
        });
        jusername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jusernameKeyReleased(evt);
            }
        });
        getContentPane().add(jusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 270, 360, 50));

        jmasuk.setBackground(new java.awt.Color(153, 153, 153));
        jmasuk.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jmasuk.setText("MASUK");
        jmasuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmasukActionPerformed(evt);
            }
        });
        getContentPane().add(jmasuk, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 620, 160, 70));

        jposisi.setBackground(new java.awt.Color(0, 51, 102));
        jposisi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jposisi.setForeground(new java.awt.Color(255, 255, 255));
        jposisi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Posisi", "Owner", "Kasir" }));
        jposisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jposisiActionPerformed(evt);
            }
        });
        getContentPane().add(jposisi, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 490, 360, 50));

        jpassword.setBackground(new java.awt.Color(0, 51, 102));
        jpassword.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jpassword.setForeground(new java.awt.Color(255, 255, 255));
        jpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpasswordActionPerformed(evt);
            }
        });
        getContentPane().add(jpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 380, 360, 50));

        jlihatpassword.setBackground(new java.awt.Color(255, 255, 255));
        jlihatpassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlihatpassword.setText("show in password");
        jlihatpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlihatpasswordActionPerformed(evt);
            }
        });
        getContentPane().add(jlihatpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(999, 430, -1, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GAMBAR/Tampilan Login Kosong .png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        setSize(new java.awt.Dimension(1280, 800));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jlihatpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlihatpasswordActionPerformed
        if (jlihatpassword.isSelected()) {
            jpassword.setEchoChar((char) 0);
        } else {
            jpassword.setEchoChar('*');
        }
    }//GEN-LAST:event_jlihatpasswordActionPerformed

    private void jmasukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmasukActionPerformed
        Dashboard_Owner db = new Dashboard_Owner();  // Form Owner
        Dashboard_Kasir dk = new Dashboard_Kasir();  // Form Kasir
        String username = jusername.getText();       // Ambil username dari input
        String password = jpassword.getText();       // Ambil password dari input
        String posisi = (String) jposisi.getSelectedItem(); // Ambil posisi dari dropdown

        // Cek input username dan password
        if (username.isEmpty() || password.isEmpty()) {
            popupmasuk6 masuk = new popupmasuk6();
            masuk.setAlwaysOnTop(true);  // Agar popup berada di depan
            masuk.setVisible(true);
            clearFields(); // Menghapus kolom input
            return;
        }

        // Validasi username dan password
        if (validateUsernamePassword(username, password)) {
            // Reset jumlah kesalahan jika login berhasil
            attemptCount = 0;

            // Cek apakah posisi sesuai
            if (validateUserPosition(username, password, posisi)) {
                // Login berhasil
                if (posisi.equals("Kasir")) {
                    dk.Username.setText(username);  // Tampilkan username di form Kasir
                    dk.Posisi.setText(posisi);      // Tampilkan posisi Kasir
                    currentUsername = jusername.getText();
                    currentPosisi = (String) jposisi.getSelectedItem();
                    System.out.println("nama : " + currentUsername);

                    dk.setVisible(true);            // Tampilkan form Kasir
                } else if (posisi.equals("Owner")) {
                    db.Username1.setText(username); // Tampilkan username di form Owner
                    db.Posisi1.setText(posisi); // Tampilkan posisi Owner
                    currentUsername = jusername.getText();
                    currentPosisi = (String) jposisi.getSelectedItem();
                    System.out.println("nama : " + currentUsername);

                    db.setVisible(true);            // Tampilkan form Owner
                }
                this.dispose();                     // Menutup form login
            } else {
                // Posisi salah
                popupmasuk1 masuk = new popupmasuk1();
                masuk.setAlwaysOnTop(true);  // Agar popup berada di depan
                masuk.setVisible(true);
                clearFields(); // Hapus input setelah kesalahan
            }
        } else {
            // Username atau password salah
            attemptCount++;

            if (attemptCount >= 2 && posisi.equals("Owner")) {
                // Tampilkan popupmasuk3 jika Owner salah 2 kali
                popupmasuk3 masuk = new popupmasuk3();
                masuk.setAlwaysOnTop(true);  // Agar popup berada di depan
                masuk.setVisible(true);
                clearFields(); // Hapus input setelah kesalahan
                attemptCount = 0; // Reset jumlah kesalahan
            } else {
                if (attemptCount >= 2 && posisi.equals("Kasir")) {
                    // Tampilkan popupmasuk3 jika Kasir salah 2 kali
                    popupmasuk2 masuk = new popupmasuk2();
                    masuk.setAlwaysOnTop(true);  // Agar popup berada di depan
                    masuk.setVisible(true);
                    clearFields(); // Hapus input setelah kesalahan
                    attemptCount = 0; // Reset jumlah kesalahan
                } else {
                    // Tampilkan popup default untuk kesalahan login
                    popupmasuk masuk = new popupmasuk();
                    masuk.setAlwaysOnTop(false);  // Agar popup berada di depan
                    masuk.setVisible(true);
                    clearFields(); // Hapus input setelah kesalahan
                }
            }
        }
    }
        // Fungsi untuk validasi username dan password
    private boolean validateUsernamePassword(String username, String password) {
        try {
            String query = "SELECT * FROM users WHERE username = ? AND password = ?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, username);
            stmt.setString(2, password);
            ResultSet rs = stmt.executeQuery();
            return rs.next();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            return false;
        }
    }

// Fungsi untuk validasi posisi user
    private boolean validateUserPosition(String username, String password, String posisi) {
        try {
            String query = "SELECT posisi FROM users WHERE username = ? AND password = ?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, username);
            stmt.setString(2, password);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                String correctPosition = rs.getString("posisi");
                return correctPosition.equals(posisi);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
        return false;
    }

// Fungsi untuk menghapus kolom input
    private void clearFields() {
        jusername.setText("");
        jpassword.setText("");
        jposisi.setSelectedIndex(0); // Reset ke pilihan pertama
    }//GEN-LAST:event_jmasukActionPerformed

    private void jposisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jposisiActionPerformed

    }//GEN-LAST:event_jposisiActionPerformed

    private void jpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpasswordActionPerformed

    }//GEN-LAST:event_jpasswordActionPerformed

    private void jusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jusernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jusernameActionPerformed

    private void jusernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jusernameKeyReleased

    }//GEN-LAST:event_jusernameKeyReleased

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Masuk().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox jlihatpassword;
    private javax.swing.JButton jmasuk;
    private javax.swing.JPasswordField jpassword;
    private javax.swing.JComboBox<String> jposisi;
    private javax.swing.JTextField jusername;
    // End of variables declaration//GEN-END:variables
}
