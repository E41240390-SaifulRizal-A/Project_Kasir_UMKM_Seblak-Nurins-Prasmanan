/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.raven.main;

import com.raven.chart.ModelChart;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.border.LineBorder;

/**
 *
 * @author Tijani Robith
 */
public class Dashboar_Owner extends javax.swing.JPanel {

    public Dashboar_Owner() {
        initComponents();

        // Set panel background and chart border
        setBackground(new Color(245, 245, 245));
        chart.setBorder(new LineBorder(new Color(200, 200, 200), 2));

        // Customize chart legends with better colors
        chart.addLegend("Penjualan", new Color(85, 135, 245));
        chart.addLegend("Pembelian", new Color(245, 85, 85));

        // Set font for the chart
        chart.setFont(new Font("SansSerif", Font.BOLD, 12));

        // Fetch and display chart data
        List<ModelChart> chartData = getChartData();
        for (ModelChart data : chartData) {
            chart.addData(data);
        }
    }

    private List<ModelChart> getChartData() {
        List<ModelChart> dataList = new ArrayList<>();
        String url = "jdbc:mysql://localhost:3306/db_kasir_umkm1";
        String user = "root";
        String password = "";

        String query = "SELECT days.day_name, "
                + "COALESCE(SUM(penjualan.grand_total), 0) AS total_penjualan, "
                + "COALESCE(SUM(pembelian.total_harga), 0) AS total_pembelian "
                + "FROM ("
                + "  SELECT 'Monday' AS day_name UNION ALL "
                + "  SELECT 'Tuesday' UNION ALL "
                + "  SELECT 'Wednesday' UNION ALL "
                + "  SELECT 'Thursday' UNION ALL "
                + "  SELECT 'Friday' UNION ALL "
                + "  SELECT 'Saturday' UNION ALL "
                + "  SELECT 'Sunday' "
                + ") days "
                + "LEFT JOIN penjualan ON DAYNAME(penjualan.tanggal_jual) = days.day_name "
                + "LEFT JOIN pembelian ON DAYNAME(pembelian.tanggal_beli) = days.day_name "
                + "GROUP BY days.day_name "
                + "ORDER BY FIELD(days.day_name, 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')";

        try (Connection conn = DriverManager.getConnection(url, user, password); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {

            while (rs.next()) {
                String dayName = rs.getString("day_name");
                String label = translateDayToIndonesian(dayName);
                double totalPenjualan = rs.getDouble("total_penjualan");
                double totalPembelian = rs.getDouble("total_pembelian");

                chart.clear();
                dataList.add(new ModelChart(label, new double[]{totalPenjualan, totalPembelian}));
                chart.start();
            }
        } catch (Exception e) {
            System.err.println("Database connection or query error:");
            e.printStackTrace();
        }

        return dataList;
    }

    private String translateDayToIndonesian(String dayName) {
        switch (dayName) {
            case "Monday":
                return "Senin";
            case "Tuesday":
                return "Selasa";
            case "Wednesday":
                return "Rabu";
            case "Thursday":
                return "Kamis";
            case "Friday":
                return "Jumat";
            case "Saturday":
                return "Sabtu";
            case "Sunday":
                return "Minggu";
            default:
                return dayName;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chart = new com.raven.chart.Chart();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(chart, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 450));
    }// </editor-fold>//GEN-END:initComponents
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Grafik_mingguan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Grafik_mingguan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Grafik_mingguan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Grafik_mingguan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            javax.swing.JFrame frame = new javax.swing.JFrame("Dashboard Grafik");
            frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
            frame.setSize(550, 400);
            frame.add(new Dashboar_Owner());
            frame.setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.raven.chart.Chart chart;
    // End of variables declaration//GEN-END:variables
}
